name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: version of application
        required: true
  push:
    branches:
      - beta

env:
  GITOPS_REPO: 2110336-2565-2/sec3-group15-cu-freelance-gitops
  GITOPS_APPLICATION_NAME: web

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      BRANCH: ${{ steps.env.outputs.BRANCH }}
      IMAGE_TAG: ${{ steps.env.outputs.IMAGE_TAG }}
      IMAGE_NAME: ${{ steps.env.outputs.IMAGE_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set environment
        id: env
        run: |
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "IMAGE_NAME=ghcr.io/${{ github.repository }}" >> $GITHUB_ENV
          echo "::set-output name=IMAGE_NAME::ghcr.io/${{ github.repository }}"
          echo "::set-output name=IMAGE_TAG::$(git rev-parse --short "$GITHUB_SHA")"
          echo "::set-output name=BRANCH::${GITHUB_REF#refs/heads/}"

      - name: Set env files
        if: github.ref_name == 'beta'
        run: |
          mv .env.beta .env.production

      - name: Log in to the Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.GIT_HASH }},${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    if: github.ref_name != 'main'
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GH_PAT }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Update image version
        working-directory: ${{ env.GITOPS_APPLICATION_NAME }}/overlays/${{ env.ENV }}
        run: |
          kustomize edit set image ${{ needs.build.outputs.IMAGE_NAME }}=${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.IMAGE_TAG }}

      - name: Commit and push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          message: "chore: set `${{ env.GITOPS_APPLICATION_NAME }}` image tag to `${{ needs.build.outputs.IMAGE_TAG }}`"
          repository: ${{ env.GITOPS_REPO }}
          force: true
          branch: master

  deploy-production:
    name: Deploy Production
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs:
      - test
      - build

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GH_PAT }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Update image version
        working-directory: ${{ env.GITOPS_APPLICATION_NAME }}/overlays/prod
        run: |
          kustomize edit set image ${{ needs.build.outputs.IMAGE_NAME }}=${{ needs.build.outputs.IMAGE_NAME }}:${{ github.event.inputs.version }}

      - name: Commit and push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          message: "chore: set `${{ env.GITOPS_APPLICATION_NAME }}` image tag to `${{ github.event.inputs.version }}`"
          repository: ${{ env.GITOPS_REPO }}
          force: true
          branch: master
